{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 28, "column": 0}, "map": {"version":3,"sources":["file:///Users/sjw/ted.urssu/crayon-front/src/constants/index.ts"],"sourcesContent":["import { DocumentTemplate, MenuItem, SupportItem, Notice } from '@/types';\n\n// 메인 메뉴 항목들\nexport const MAIN_MENU_ITEMS: MenuItem[] = [\n  {\n    id: 'document-generation',\n    title: '문서 생성',\n    description: 'AI 기반 행정 문서 자동 생성',\n    icon: 'fas fa-file-alt',\n    href: '/documents',\n    isActive: true,\n  },\n  {\n    id: 'evaluation-grading',\n    title: '수행평가 채점',\n    description: 'AI 자동 채점 시스템',\n    icon: 'fas fa-clipboard-check',\n    href: '/evaluation',\n  },\n  {\n    id: 'attendance-management',\n    title: '출결 관리',\n    description: '출석부 관리 및 통계',\n    icon: 'fas fa-calendar-check',\n    href: '/attendance',\n  },\n];\n\n// 문서 템플릿들\nexport const DOCUMENT_TEMPLATES: DocumentTemplate[] = [\n  {\n    id: 'home-communication',\n    title: '가정통신문',\n    description: '학부모 대상 안내 문서',\n    category: 'communication',\n    templateCount: 5,\n    features: ['템플릿 제공', '자동 완성', '일괄 발송'],\n  },\n  {\n    id: 'creative-activity-plan',\n    title: '창의적 체험활동 계획서',\n    description: '체험활동 계획 및 운영 문서',\n    category: 'activity',\n    features: ['자동 완성 기능', '교육과정 연계', 'AI 추천'],\n  },\n  {\n    id: 'evaluation-rubric',\n    title: '수행평가 기준표',\n    description: '과목별 평가 기준 문서',\n    category: 'evaluation',\n    features: ['과목별 양식', '자동 배점', '루브릭 생성'],\n  },\n  {\n    id: 'class-meeting-minutes',\n    title: '학급회의록',\n    description: '학급 회의 기록 문서',\n    category: 'meeting',\n    features: ['음성인식 받아쓰기', '자동 요약', '참석자 관리'],\n  },\n  {\n    id: 'field-trip-plan',\n    title: '현장체험학습 계획서',\n    description: '체험학습 계획 및 안전 관리',\n    category: 'activity',\n    features: ['안전 계획 자동 생성', '보험 연계', '승인 절차'],\n  },\n  {\n    id: 'parent-consultation',\n    title: '학부모 상담 기록부',\n    description: '상담 내용 기록 및 관리',\n    category: 'communication',\n    features: ['상담 이력 관리', '자동 분류', '후속 조치 알림'],\n  },\n];\n\n// 공지사항\nexport const NOTICES: Notice[] = [\n  {\n    id: '1',\n    title: '8월 시스템 정기점검 안내',\n    content: '8월 25일 오전 2시부터 4시까지 시스템 정기점검이 진행됩니다.',\n    date: '2024-08-15',\n    isImportant: true,\n  },\n  {\n    id: '2',\n    title: '수행평가 채점 AI 모델 업데이트 안내',\n    content: '더욱 정확한 채점을 위한 AI 모델이 업데이트되었습니다.',\n    date: '2024-08-14',\n  },\n  {\n    id: '3',\n    title: '새로운 문서 템플릿 추가',\n    content: '현장체험학습 계획서와 학부모 상담 기록부 템플릿이 추가되었습니다.',\n    date: '2024-08-13',\n  },\n];\n\n// 지원 메뉴\nexport const SUPPORT_ITEMS: SupportItem[] = [\n  {\n    id: 'manual',\n    title: '사용 메뉴얼',\n    href: '/manual',\n    icon: 'fas fa-book',\n  },\n  {\n    id: 'faq',\n    title: '자주 묻는 질문 (FAQ)',\n    href: '/faq',\n    icon: 'fas fa-question-circle',\n  },\n  {\n    id: 'support',\n    title: '1:1 고객 지원',\n    href: '/support',\n    icon: 'fas fa-headset',\n  },\n];\n\n// 네비게이션 메뉴\nexport const NAVIGATION_ITEMS = [\n  { title: '학생관리', href: '/students' },\n  { title: '출결도우미', href: '/attendance' },\n  { title: '채점도우미', href: '/evaluation' },\n  { title: '생기부도우미', href: '/records' },\n];\n\n// 색상 상수\nexport const COLORS = {\n  primary: '#1ccf60',\n  primaryLight: '#22d065',\n  primaryDark: '#16a34a',\n  background: '#ffffff',\n  backgroundLight: '#f9fafb',\n  text: '#333333',\n  textLight: '#6b7280',\n  border: '#e5e7eb',\n  borderLight: '#f0f0f0',\n} as const;\n\n// 브레이크포인트\nexport const BREAKPOINTS = {\n  sm: '640px',\n  md: '768px',\n  lg: '1024px',\n  xl: '1280px',\n  '2xl': '1536px',\n} as const;\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAGO,MAAM,kBAA8B;IACzC;QACE,IAAI;QACJ,OAAO;QACP,aAAa;QACb,MAAM;QACN,MAAM;QACN,UAAU;IACZ;IACA;QACE,IAAI;QACJ,OAAO;QACP,aAAa;QACb,MAAM;QACN,MAAM;IACR;IACA;QACE,IAAI;QACJ,OAAO;QACP,aAAa;QACb,MAAM;QACN,MAAM;IACR;CACD;AAGM,MAAM,qBAAyC;IACpD;QACE,IAAI;QACJ,OAAO;QACP,aAAa;QACb,UAAU;QACV,eAAe;QACf,UAAU;YAAC;YAAU;YAAS;SAAQ;IACxC;IACA;QACE,IAAI;QACJ,OAAO;QACP,aAAa;QACb,UAAU;QACV,UAAU;YAAC;YAAY;YAAW;SAAQ;IAC5C;IACA;QACE,IAAI;QACJ,OAAO;QACP,aAAa;QACb,UAAU;QACV,UAAU;YAAC;YAAU;YAAS;SAAS;IACzC;IACA;QACE,IAAI;QACJ,OAAO;QACP,aAAa;QACb,UAAU;QACV,UAAU;YAAC;YAAa;YAAS;SAAS;IAC5C;IACA;QACE,IAAI;QACJ,OAAO;QACP,aAAa;QACb,UAAU;QACV,UAAU;YAAC;YAAe;YAAS;SAAQ;IAC7C;IACA;QACE,IAAI;QACJ,OAAO;QACP,aAAa;QACb,UAAU;QACV,UAAU;YAAC;YAAY;YAAS;SAAW;IAC7C;CACD;AAGM,MAAM,UAAoB;IAC/B;QACE,IAAI;QACJ,OAAO;QACP,SAAS;QACT,MAAM;QACN,aAAa;IACf;IACA;QACE,IAAI;QACJ,OAAO;QACP,SAAS;QACT,MAAM;IACR;IACA;QACE,IAAI;QACJ,OAAO;QACP,SAAS;QACT,MAAM;IACR;CACD;AAGM,MAAM,gBAA+B;IAC1C;QACE,IAAI;QACJ,OAAO;QACP,MAAM;QACN,MAAM;IACR;IACA;QACE,IAAI;QACJ,OAAO;QACP,MAAM;QACN,MAAM;IACR;IACA;QACE,IAAI;QACJ,OAAO;QACP,MAAM;QACN,MAAM;IACR;CACD;AAGM,MAAM,mBAAmB;IAC9B;QAAE,OAAO;QAAQ,MAAM;IAAY;IACnC;QAAE,OAAO;QAAS,MAAM;IAAc;IACtC;QAAE,OAAO;QAAS,MAAM;IAAc;IACtC;QAAE,OAAO;QAAU,MAAM;IAAW;CACrC;AAGM,MAAM,SAAS;IACpB,SAAS;IACT,cAAc;IACd,aAAa;IACb,YAAY;IACZ,iBAAiB;IACjB,MAAM;IACN,WAAW;IACX,QAAQ;IACR,aAAa;AACf;AAGO,MAAM,cAAc;IACzB,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,OAAO;AACT","debugId":null}},
    {"offset": {"line": 218, "column": 0}, "map": {"version":3,"sources":["file:///Users/sjw/ted.urssu/crayon-front/src/components/layout/MobileMenu.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport Link from 'next/link';\nimport { usePathname } from 'next/navigation';\nimport { NAVIGATION_ITEMS } from '@/constants';\n\ninterface MobileMenuProps {\n  isOpen: boolean;\n  onClose: () => void;\n}\n\n/**\n * 모바일 메뉴 컴포넌트\n * \n * 모바일 환경에서 사용되는 슬라이드 메뉴입니다.\n * \n * 주요 기능:\n * - 슬라이드 애니메이션\n * - 오버레이 백드롭\n * - 터치 제스처 지원\n * - 접근성 고려\n * \n * @param isOpen - 메뉴 열림 상태\n * @param onClose - 메뉴 닫기 콜백\n */\nconst MobileMenu: React.FC<MobileMenuProps> = ({ isOpen, onClose }) => {\n  const pathname = usePathname();\n\n  // ESC 키로 메뉴 닫기\n  useEffect(() => {\n    const handleEscape = (e: KeyboardEvent) => {\n      if (e.key === 'Escape' && isOpen) {\n        onClose();\n      }\n    };\n\n    document.addEventListener('keydown', handleEscape);\n    return () => document.removeEventListener('keydown', handleEscape);\n  }, [isOpen, onClose]);\n\n  // 바디 스크롤 방지\n  useEffect(() => {\n    if (isOpen) {\n      document.body.style.overflow = 'hidden';\n    } else {\n      document.body.style.overflow = 'unset';\n    }\n\n    return () => {\n      document.body.style.overflow = 'unset';\n    };\n  }, [isOpen]);\n\n  if (!isOpen) return null;\n\n  return (\n    <>\n      {/* 백드롭 오버레이 */}\n      <div\n        className=\"fixed inset-0 bg-black bg-opacity-50 z-40 md:hidden\"\n        onClick={onClose}\n        aria-hidden=\"true\"\n      />\n\n      {/* 슬라이드 메뉴 */}\n      <div\n        className={`fixed top-0 left-0 h-full w-80 bg-white shadow-xl z-50 transform transition-transform duration-300 ease-in-out md:hidden ${\n          isOpen ? 'translate-x-0' : '-translate-x-full'\n        }`}\n      >\n        {/* 헤더 */}\n        <div className=\"flex items-center justify-between p-6 border-b border-gray-200\">\n          <div className=\"flex items-center\">\n            <div className=\"w-8 h-8 bg-primary-500 rounded-lg flex items-center justify-center mr-3\">\n              <svg\n                className=\"w-5 h-5 text-white\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\"\n                />\n              </svg>\n            </div>\n            <h2 className=\"text-lg font-bold text-gray-900\">AI 행정 도우미</h2>\n          </div>\n          <button\n            onClick={onClose}\n            className=\"p-2 text-gray-400 hover:text-gray-600 transition-colors\"\n            aria-label=\"메뉴 닫기\"\n          >\n            <svg\n              className=\"w-6 h-6\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M6 18L18 6M6 6l12 12\"\n              />\n            </svg>\n          </button>\n        </div>\n\n        {/* 네비게이션 메뉴 */}\n        <nav className=\"py-6\">\n          <div className=\"px-6 mb-4\">\n            <h3 className=\"text-xs font-semibold text-gray-400 uppercase tracking-wider\">\n              메인 메뉴\n            </h3>\n          </div>\n          <div className=\"space-y-1\">\n            {NAVIGATION_ITEMS.map((item) => {\n              const isActive = pathname === item.href;\n              return (\n                <Link\n                  key={item.href}\n                  href={item.href}\n                  onClick={onClose}\n                  className={`flex items-center px-6 py-3 text-sm font-medium transition-colors ${\n                    isActive\n                      ? 'text-primary-600 bg-primary-50 border-r-4 border-primary-600'\n                      : 'text-gray-600 hover:text-gray-900 hover:bg-gray-50'\n                  }`}\n                >\n                  {item.title}\n                </Link>\n              );\n            })}\n          </div>\n        </nav>\n\n        {/* 사용자 정보 */}\n        <div className=\"absolute bottom-0 left-0 right-0 p-6 border-t border-gray-200\">\n          <div className=\"flex items-center\">\n            <img\n              className=\"h-10 w-10 rounded-full object-cover border-2 border-gray-200\"\n              src=\"https://placehold.co/100x100/1ccf60/ffffff?text=교\"\n              alt=\"사용자 프로필\"\n            />\n            <div className=\"ml-3\">\n              <p className=\"text-sm font-semibold text-gray-900\">김민준 선생님</p>\n              <p className=\"text-xs text-gray-500\">서울초등학교</p>\n            </div>\n          </div>\n          <div className=\"mt-4 grid grid-cols-2 gap-3\">\n            <button className=\"flex items-center justify-center px-3 py-2 text-xs font-medium text-gray-600 bg-gray-100 rounded-lg hover:bg-gray-200 transition-colors\">\n              <svg className=\"w-4 h-4 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\" />\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\n              </svg>\n              설정\n            </button>\n            <button className=\"flex items-center justify-center px-3 py-2 text-xs font-medium text-gray-600 bg-gray-100 rounded-lg hover:bg-gray-200 transition-colors\">\n              <svg className=\"w-4 h-4 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\" />\n              </svg>\n              로그아웃\n            </button>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default MobileMenu;\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA;AALA;;;;;;AAYA;;;;;;;;;;;;;CAaC,GACD,MAAM,aAAwC,CAAC,EAAE,MAAM,EAAE,OAAO,EAAE;IAChE,MAAM,WAAW,IAAA,iJAAW;IAE5B,eAAe;IACf,IAAA,kNAAS,EAAC;QACR,MAAM,eAAe,CAAC;YACpB,IAAI,EAAE,GAAG,KAAK,YAAY,QAAQ;gBAChC;YACF;QACF;QAEA,SAAS,gBAAgB,CAAC,WAAW;QACrC,OAAO,IAAM,SAAS,mBAAmB,CAAC,WAAW;IACvD,GAAG;QAAC;QAAQ;KAAQ;IAEpB,YAAY;IACZ,IAAA,kNAAS,EAAC;QACR,IAAI,QAAQ;YACV,SAAS,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG;QACjC,OAAO;YACL,SAAS,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG;QACjC;QAEA,OAAO;YACL,SAAS,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG;QACjC;IACF,GAAG;QAAC;KAAO;IAEX,IAAI,CAAC,QAAQ,OAAO;IAEpB,qBACE;;0BAEE,8OAAC;gBACC,WAAU;gBACV,SAAS;gBACT,eAAY;;;;;;0BAId,8OAAC;gBACC,WAAW,CAAC,yHAAyH,EACnI,SAAS,kBAAkB,qBAC3B;;kCAGF,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAI,WAAU;kDACb,cAAA,8OAAC;4CACC,WAAU;4CACV,MAAK;4CACL,QAAO;4CACP,SAAQ;sDAER,cAAA,8OAAC;gDACC,eAAc;gDACd,gBAAe;gDACf,aAAa;gDACb,GAAE;;;;;;;;;;;;;;;;kDAIR,8OAAC;wCAAG,WAAU;kDAAkC;;;;;;;;;;;;0CAElD,8OAAC;gCACC,SAAS;gCACT,WAAU;gCACV,cAAW;0CAEX,cAAA,8OAAC;oCACC,WAAU;oCACV,MAAK;oCACL,QAAO;oCACP,SAAQ;8CAER,cAAA,8OAAC;wCACC,eAAc;wCACd,gBAAe;wCACf,aAAa;wCACb,GAAE;;;;;;;;;;;;;;;;;;;;;;kCAOV,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;0CACb,cAAA,8OAAC;oCAAG,WAAU;8CAA+D;;;;;;;;;;;0CAI/E,8OAAC;gCAAI,WAAU;0CACZ,6IAAgB,CAAC,GAAG,CAAC,CAAC;oCACrB,MAAM,WAAW,aAAa,KAAK,IAAI;oCACvC,qBACE,8OAAC,uKAAI;wCAEH,MAAM,KAAK,IAAI;wCACf,SAAS;wCACT,WAAW,CAAC,kEAAkE,EAC5E,WACI,iEACA,sDACJ;kDAED,KAAK,KAAK;uCATN,KAAK,IAAI;;;;;gCAYpB;;;;;;;;;;;;kCAKJ,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCACC,WAAU;wCACV,KAAI;wCACJ,KAAI;;;;;;kDAEN,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDAAE,WAAU;0DAAsC;;;;;;0DACnD,8OAAC;gDAAE,WAAU;0DAAwB;;;;;;;;;;;;;;;;;;0CAGzC,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAO,WAAU;;0DAChB,8OAAC;gDAAI,WAAU;gDAAe,MAAK;gDAAO,QAAO;gDAAe,SAAQ;;kEACtE,8OAAC;wDAAK,eAAc;wDAAQ,gBAAe;wDAAQ,aAAa;wDAAG,GAAE;;;;;;kEACrE,8OAAC;wDAAK,eAAc;wDAAQ,gBAAe;wDAAQ,aAAa;wDAAG,GAAE;;;;;;;;;;;;4CACjE;;;;;;;kDAGR,8OAAC;wCAAO,WAAU;;0DAChB,8OAAC;gDAAI,WAAU;gDAAe,MAAK;gDAAO,QAAO;gDAAe,SAAQ;0DACtE,cAAA,8OAAC;oDAAK,eAAc;oDAAQ,gBAAe;oDAAQ,aAAa;oDAAG,GAAE;;;;;;;;;;;4CACjE;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQpB;uCAEe","debugId":null}},
    {"offset": {"line": 562, "column": 0}, "map": {"version":3,"sources":["file:///Users/sjw/ted.urssu/crayon-front/src/components/layout/Header.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState } from 'react';\nimport Link from 'next/link';\nimport { usePathname } from 'next/navigation';\nimport { NAVIGATION_ITEMS } from '@/constants';\nimport { User } from '@/types';\nimport MobileMenu from './MobileMenu';\n\ninterface HeaderProps {\n  user?: User;\n}\n\n/**\n * 상단 네비게이션 바 컴포넌트\n * \n * 기능:\n * - 로고 및 서비스명 표시\n * - 메인 네비게이션 메뉴\n * - 사용자 정보 및 알림\n * - 반응형 디자인 지원\n * \n * @param user - 현재 로그인한 사용자 정보\n */\nconst Header: React.FC<HeaderProps> = ({ user }) => {\n  const pathname = usePathname();\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n\n  // 기본 사용자 정보 (개발용)\n  const defaultUser: User = {\n    id: '1',\n    name: '김민준',\n    email: 'teacher@school.edu',\n    role: 'teacher',\n    school: '서울초등학교',\n    avatar: 'https://placehold.co/100x100/1ccf60/ffffff?text=교',\n  };\n\n  const currentUser = user || defaultUser;\n\n  const toggleMobileMenu = () => {\n    setIsMobileMenuOpen(!isMobileMenuOpen);\n  };\n\n  return (\n    <header className=\"bg-white/95 backdrop-blur-sm border-b border-gray-200 w-full flex-shrink-0 fixed top-0 left-0 right-0 z-50 shadow-sm\">\n      <div className=\"mx-auto px-6\">\n        <div className=\"flex justify-between items-center h-16\">\n          {/* 로고 및 메뉴 */}\n          <div className=\"flex items-center space-x-8\">\n            {/* 로고 */}\n            <Link href=\"/\" className=\"flex items-center hover:opacity-80 transition-opacity cursor-pointer\">\n              <img \n                src=\"/images/pencil-logo.png\" \n                alt=\"로고\" \n                className=\"w-8 h-8 rounded-full mr-2 shadow-sm\"\n              />\n              <h1 className=\"text-lg font-bold\">크레파스 - AI도우미</h1>\n            </Link>\n            {/* 네비게이션 메뉴 */}\n            <nav className=\"hidden md:flex items-center space-x-6\">\n              {NAVIGATION_ITEMS.map((item) => {\n                const isActive = pathname === item.href;\n                return (\n                  <Link\n                    key={item.href}\n                    href={item.href}\n                    className={`text-sm font-semibold ${\n                      isActive\n                        ? 'text-primary-500 border-b-2 border-primary-500 pb-1'\n                        : 'text-gray-600 hover:text-primary-500'\n                    }`}\n                  >\n                    {item.title}\n                  </Link>\n                );\n              })}\n            </nav>\n          </div>\n          {/* 사용자 정보 및 알림 */}\n          <div className=\"flex items-center space-x-4\">\n            <button className=\"text-gray-500 hover:text-gray-800\">\n              <i className=\"fas fa-bell\"></i>\n            </button>\n            <div className=\"flex items-center\">\n              <img\n                className=\"h-9 w-9 rounded-full object-cover\"\n                src=\"/images/cute-character.svg\"\n                alt=\"User avatar\"\n              />\n              <div className=\"ml-2 hidden md:block\">\n                <p className=\"text-sm font-semibold\">{currentUser.name} 선생님</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* 모바일 메뉴 */}\n      <MobileMenu \n        isOpen={isMobileMenuOpen} \n        onClose={() => setIsMobileMenuOpen(false)} \n      />\n    </header>\n  );\n};\n\nexport default Header;\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA;AAEA;AAPA;;;;;;;AAaA;;;;;;;;;;CAUC,GACD,MAAM,SAAgC,CAAC,EAAE,IAAI,EAAE;IAC7C,MAAM,WAAW,IAAA,iJAAW;IAC5B,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,IAAA,iNAAQ,EAAC;IAEzD,kBAAkB;IAClB,MAAM,cAAoB;QACxB,IAAI;QACJ,MAAM;QACN,OAAO;QACP,MAAM;QACN,QAAQ;QACR,QAAQ;IACV;IAEA,MAAM,cAAc,QAAQ;IAE5B,MAAM,mBAAmB;QACvB,oBAAoB,CAAC;IACvB;IAEA,qBACE,8OAAC;QAAO,WAAU;;0BAChB,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;;sCAEb,8OAAC;4BAAI,WAAU;;8CAEb,8OAAC,uKAAI;oCAAC,MAAK;oCAAI,WAAU;;sDACvB,8OAAC;4CACC,KAAI;4CACJ,KAAI;4CACJ,WAAU;;;;;;sDAEZ,8OAAC;4CAAG,WAAU;sDAAoB;;;;;;;;;;;;8CAGpC,8OAAC;oCAAI,WAAU;8CACZ,6IAAgB,CAAC,GAAG,CAAC,CAAC;wCACrB,MAAM,WAAW,aAAa,KAAK,IAAI;wCACvC,qBACE,8OAAC,uKAAI;4CAEH,MAAM,KAAK,IAAI;4CACf,WAAW,CAAC,sBAAsB,EAChC,WACI,wDACA,wCACJ;sDAED,KAAK,KAAK;2CARN,KAAK,IAAI;;;;;oCAWpB;;;;;;;;;;;;sCAIJ,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAO,WAAU;8CAChB,cAAA,8OAAC;wCAAE,WAAU;;;;;;;;;;;8CAEf,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CACC,WAAU;4CACV,KAAI;4CACJ,KAAI;;;;;;sDAEN,8OAAC;4CAAI,WAAU;sDACb,cAAA,8OAAC;gDAAE,WAAU;;oDAAyB,YAAY,IAAI;oDAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAQjE,8OAAC,qJAAU;gBACT,QAAQ;gBACR,SAAS,IAAM,oBAAoB;;;;;;;;;;;;AAI3C;uCAEe","debugId":null}},
    {"offset": {"line": 758, "column": 0}, "map": {"version":3,"sources":["file:///Users/sjw/ted.urssu/crayon-front/src/components/layout/Sidebar.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport Link from 'next/link';\nimport { Notice, SupportItem } from '@/types';\n// import { NOTICES, SUPPORT_ITEMS } from '@/constants';\n\n/**\n * 우측 사이드바 컴포넌트\n * \n * 기능:\n * - 공지사항 표시\n * - 도움말 및 지원 메뉴\n * - 반응형 디자인 (모바일에서는 숨김)\n * \n * 이 컴포넌트는 Clean Architecture의 UI Layer에 속하며,\n * 비즈니스 로직과 분리된 순수한 프레젠테이션 컴포넌트입니다.\n */\nconst Sidebar: React.FC = () => {\n  /**\n   * 날짜를 한국어 형식으로 포맷팅\n   * @param dateString - ISO 날짜 문자열\n   * @returns 포맷된 날짜 문자열\n   */\n  const formatDate = (dateString: string): string => {\n    const date = new Date(dateString);\n    return new Intl.DateTimeFormat('ko-KR', {\n      month: 'long',\n      day: 'numeric',\n    }).format(date);\n  };\n\n  /**\n   * 공지사항 아이템 렌더링\n   */\n  const renderNoticeItem = (notice: Notice) => (\n    <li key={notice.id} className=\"group\">\n      <Link\n        href={`/notices/${notice.id}`}\n        className=\"block p-3 rounded-lg hover:bg-gray-50 transition-colors\"\n      >\n        <div className=\"flex items-start justify-between\">\n          <div className=\"flex-1 min-w-0\">\n            <p className={`text-sm font-medium truncate ${\n              notice.isImportant ? 'text-red-600' : 'text-gray-900'\n            }`}>\n              {notice.isImportant && (\n                <span className=\"inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-red-100 text-red-800 mr-2\">\n                  중요\n                </span>\n              )}\n              {notice.title}\n            </p>\n            <p className=\"text-xs text-gray-500 mt-1 line-clamp-2\">\n              {notice.content}\n            </p>\n            <p className=\"text-xs text-gray-400 mt-1\">\n              {formatDate(notice.date)}\n            </p>\n          </div>\n          <svg\n            className=\"w-4 h-4 text-gray-400 group-hover:text-green-500 transition-colors ml-2\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            viewBox=\"0 0 24 24\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M9 5l7 7-7 7\"\n            />\n          </svg>\n        </div>\n      </Link>\n    </li>\n  );\n\n  /**\n   * 지원 메뉴 아이템 렌더링\n   */\n  const renderSupportItem = (item: SupportItem) => (\n    <li key={item.id}>\n      <Link\n        href={item.href}\n        className=\"flex items-center p-3 text-sm text-gray-600 hover:text-green-500 hover:bg-gray-50 rounded-lg transition-all group\"\n      >\n        <svg\n          className=\"w-4 h-4 mr-3 group-hover:text-green-500 transition-colors\"\n          fill=\"currentColor\"\n          viewBox=\"0 0 20 20\"\n        >\n          {/* 아이콘은 실제 구현에서 각 타입에 맞게 교체 */}\n          <path\n            fillRule=\"evenodd\"\n            d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-8-3a1 1 0 00-.867.5 1 1 0 11-1.731-1A3 3 0 0113 8a3.001 3.001 0 01-2 2.83V11a1 1 0 11-2 0v-1a1 1 0 011-1 1 1 0 100-2zm0 8a1 1 0 100-2 1 1 0 000 2z\"\n            clipRule=\"evenodd\"\n          />\n        </svg>\n        <span className=\"truncate\">{item.title}</span>\n        <svg\n          className=\"w-3 h-3 ml-auto text-gray-400 group-hover:text-green-500 transition-colors\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          viewBox=\"0 0 24 24\"\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth={2}\n            d=\"M9 5l7 7-7 7\"\n          />\n        </svg>\n      </Link>\n    </li>\n  );\n\n  return (\n    <aside className=\"w-80 flex-shrink-0 bg-white border-l border-gray-200 p-6 overflow-y-auto hidden lg:block h-[calc(100vh-4rem)] max-h-[calc(100vh-4rem)]\">\n      <div className=\"widget-box rounded-xl mb-6\">\n        <h3 className=\"font-semibold p-4 border-b border-gray-200\">\n          공지사항\n        </h3>\n        <ul className=\"p-4 space-y-3 text-sm text-gray-600\">\n          <li className=\"hover:text-primary-500 cursor-pointer\">- 8월 시스템 정기점검 안내 (25일 02:00)</li>\n          <li className=\"hover:text-primary-500 cursor-pointer\">- 수행평가 채점 AI 모델 업데이트 안내</li>\n        </ul>\n      </div>\n      <div className=\"widget-box rounded-xl\">\n        <h3 className=\"font-semibold p-4 border-b border-gray-200\">\n          도움말 및 지원\n        </h3>\n        <ul className=\"p-4 space-y-3 text-sm text-gray-600\">\n          <li className=\"hover:text-primary-500 cursor-pointer\">사용 메뉴얼</li>\n          <li className=\"hover:text-primary-500 cursor-pointer\">자주 묻는 질문 (FAQ)</li>\n          <li className=\"hover:text-primary-500 cursor-pointer\">1:1 고객 지원</li>\n        </ul>\n      </div>\n    </aside>\n  );\n};\n\nexport default Sidebar;\n"],"names":[],"mappings":";;;;;AAGA;AAHA;;;AAKA,wDAAwD;AAExD;;;;;;;;;;CAUC,GACD,MAAM,UAAoB;IACxB;;;;GAIC,GACD,MAAM,aAAa,CAAC;QAClB,MAAM,OAAO,IAAI,KAAK;QACtB,OAAO,IAAI,KAAK,cAAc,CAAC,SAAS;YACtC,OAAO;YACP,KAAK;QACP,GAAG,MAAM,CAAC;IACZ;IAEA;;GAEC,GACD,MAAM,mBAAmB,CAAC,uBACxB,8OAAC;YAAmB,WAAU;sBAC5B,cAAA,8OAAC,uKAAI;gBACH,MAAM,CAAC,SAAS,EAAE,OAAO,EAAE,EAAE;gBAC7B,WAAU;0BAEV,cAAA,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAE,WAAW,CAAC,6BAA6B,EAC1C,OAAO,WAAW,GAAG,iBAAiB,iBACtC;;wCACC,OAAO,WAAW,kBACjB,8OAAC;4CAAK,WAAU;sDAAgG;;;;;;wCAIjH,OAAO,KAAK;;;;;;;8CAEf,8OAAC;oCAAE,WAAU;8CACV,OAAO,OAAO;;;;;;8CAEjB,8OAAC;oCAAE,WAAU;8CACV,WAAW,OAAO,IAAI;;;;;;;;;;;;sCAG3B,8OAAC;4BACC,WAAU;4BACV,MAAK;4BACL,QAAO;4BACP,SAAQ;sCAER,cAAA,8OAAC;gCACC,eAAc;gCACd,gBAAe;gCACf,aAAa;gCACb,GAAE;;;;;;;;;;;;;;;;;;;;;;WAlCH,OAAO,EAAE;;;;;IA0CpB;;GAEC,GACD,MAAM,oBAAoB,CAAC,qBACzB,8OAAC;sBACC,cAAA,8OAAC,uKAAI;gBACH,MAAM,KAAK,IAAI;gBACf,WAAU;;kCAEV,8OAAC;wBACC,WAAU;wBACV,MAAK;wBACL,SAAQ;kCAGR,cAAA,8OAAC;4BACC,UAAS;4BACT,GAAE;4BACF,UAAS;;;;;;;;;;;kCAGb,8OAAC;wBAAK,WAAU;kCAAY,KAAK,KAAK;;;;;;kCACtC,8OAAC;wBACC,WAAU;wBACV,MAAK;wBACL,QAAO;wBACP,SAAQ;kCAER,cAAA,8OAAC;4BACC,eAAc;4BACd,gBAAe;4BACf,aAAa;4BACb,GAAE;;;;;;;;;;;;;;;;;WA5BD,KAAK,EAAE;;;;;IAmClB,qBACE,8OAAC;QAAM,WAAU;;0BACf,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAA6C;;;;;;kCAG3D,8OAAC;wBAAG,WAAU;;0CACZ,8OAAC;gCAAG,WAAU;0CAAwC;;;;;;0CACtD,8OAAC;gCAAG,WAAU;0CAAwC;;;;;;;;;;;;;;;;;;0BAG1D,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAA6C;;;;;;kCAG3D,8OAAC;wBAAG,WAAU;;0CACZ,8OAAC;gCAAG,WAAU;0CAAwC;;;;;;0CACtD,8OAAC;gCAAG,WAAU;0CAAwC;;;;;;0CACtD,8OAAC;gCAAG,WAAU;0CAAwC;;;;;;;;;;;;;;;;;;;;;;;;AAKhE;uCAEe","debugId":null}},
    {"offset": {"line": 1050, "column": 0}, "map": {"version":3,"sources":["file:///Users/sjw/ted.urssu/crayon-front/src/components/layout/MainLayout.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport Header from './Header';\nimport Sidebar from './Sidebar';\nimport { User } from '@/types';\n\ninterface MainLayoutProps {\n  children: React.ReactNode;\n  user?: User;\n  showSidebar?: boolean;\n}\n\n/**\n * 메인 레이아웃 컴포넌트\n * \n * 전체 애플리케이션의 레이아웃을 담당하는 컴포넌트입니다.\n * Clean Architecture의 Framework & Drivers Layer에 해당하며,\n * 사용자 인터페이스의 전체적인 구조를 정의합니다.\n * \n * 변경 이유: 기존 HTML 구조를 React 컴포넌트로 변환하여\n * 재사용성과 유지보수성을 향상시켰습니다.\n * \n * @param children - 메인 콘텐츠 영역에 렌더링될 컴포넌트\n * @param user - 현재 로그인한 사용자 정보\n * @param showSidebar - 사이드바 표시 여부 (기본값: true)\n */\nconst MainLayout: React.FC<MainLayoutProps> = ({ \n  children, \n  user, \n  showSidebar = true \n}) => {\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* 상단 헤더 - 고정 위치 */}\n      <Header user={user} />\n\n      {/* 메인 콘텐츠 영역 - 헤더 높이만큼 상단 여백 추가 */}\n      <div className=\"flex min-h-[calc(100vh-4rem)] pt-16\">\n        {/* 메인 콘텐츠 - 남은 공간 모두 사용 */}\n        <div className=\"flex-1\">\n          {children}\n        </div>\n\n        {/* 우측 사이드바 - 조건부 렌더링 */}\n        {showSidebar && <Sidebar />}\n      </div>\n    </div>\n  );\n};\n\nexport default MainLayout;\n"],"names":[],"mappings":";;;;;AAGA;AACA;AAJA;;;;AAaA;;;;;;;;;;;;;CAaC,GACD,MAAM,aAAwC,CAAC,EAC7C,QAAQ,EACR,IAAI,EACJ,cAAc,IAAI,EACnB;IACC,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC,iJAAM;gBAAC,MAAM;;;;;;0BAGd,8OAAC;gBAAI,WAAU;;kCAEb,8OAAC;wBAAI,WAAU;kCACZ;;;;;;oBAIF,6BAAe,8OAAC,kJAAO;;;;;;;;;;;;;;;;;AAIhC;uCAEe","debugId":null}},
    {"offset": {"line": 1119, "column": 0}, "map": {"version":3,"sources":["file:///Users/sjw/ted.urssu/crayon-front/src/app/attendance/%5Bid%5D/page.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState } from 'react';\nimport { useParams, useRouter } from 'next/navigation';\nimport MainLayout from '@/components/layout/MainLayout';\nimport { ClassPeriod, Student, AttendanceRecord, AttendanceStatus } from '@/types';\n\n// 임시 데이터 (실제로는 API에서 가져올 데이터)\nconst mockClassPeriod: ClassPeriod = {\n  id: '1',\n  subject: '수학',\n  period: 1,\n  date: '2024-08-15',\n  startTime: '09:00',\n  endTime: '09:50',\n  attendanceCount: 28,\n  totalStudents: 30,\n};\n\nconst mockStudents: Student[] = [\n  { id: '1', name: '김민준', studentNumber: '20240001', class: '3-1', grade: 3, tags: [], isFavorite: false },\n  { id: '2', name: '이서윤', studentNumber: '20240002', class: '3-1', grade: 3, tags: [], isFavorite: false },\n  { id: '3', name: '박지호', studentNumber: '20240003', class: '3-1', grade: 3, tags: [], isFavorite: false },\n  { id: '4', name: '최예은', studentNumber: '20240004', class: '3-1', grade: 3, tags: [], isFavorite: false },\n  { id: '5', name: '정도현', studentNumber: '20240005', class: '3-1', grade: 3, tags: [], isFavorite: false },\n  { id: '6', name: '한소영', studentNumber: '20240006', class: '3-1', grade: 3, tags: [], isFavorite: false },\n  { id: '7', name: '윤재민', studentNumber: '20240007', class: '3-1', grade: 3, tags: [], isFavorite: false },\n  { id: '8', name: '임채원', studentNumber: '20240008', class: '3-1', grade: 3, tags: [], isFavorite: false },\n  { id: '9', name: '오현우', studentNumber: '20240009', class: '3-1', grade: 3, tags: [], isFavorite: false },\n  { id: '10', name: '강다은', studentNumber: '20240010', class: '3-1', grade: 3, tags: [], isFavorite: false },\n];\n\n// 출결 상태별 설정\nconst attendanceConfig = {\n  present: { label: '출석', color: 'bg-green-500', hoverColor: 'hover:bg-green-600' },\n  absent: { label: '결석', color: 'bg-red-500', hoverColor: 'hover:bg-red-600' },\n  late: { label: '지각', color: 'bg-yellow-500', hoverColor: 'hover:bg-yellow-600' },\n  early_leave: { label: '조퇴', color: 'bg-orange-500', hoverColor: 'hover:bg-orange-600' },\n  sick_leave: { label: '병결', color: 'bg-blue-500', hoverColor: 'hover:bg-blue-600' },\n  official_leave: { label: '공결', color: 'bg-purple-500', hoverColor: 'hover:bg-purple-600' },\n};\n\nexport default function AttendanceDetailPage() {\n  const params = useParams();\n  const router = useRouter();\n  const [attendanceRecords, setAttendanceRecords] = useState<{[studentId: string]: AttendanceStatus}>({\n    '1': 'present',\n    '2': 'present',\n    '3': 'late',\n    '4': 'present',\n    '5': 'absent',\n    '6': 'present',\n    '7': 'present',\n    '8': 'present',\n    '9': 'present',\n    '10': 'present',\n  });\n  \n  // 알림 상태 관리\n  const [notification, setNotification] = useState<{\n    show: boolean;\n    message: string;\n    type: 'success' | 'error';\n  }>({\n    show: false,\n    message: '',\n    type: 'success'\n  });\n\n  // 출결 상태 변경\n  const updateAttendance = (studentId: string, status: AttendanceStatus) => {\n    setAttendanceRecords(prev => ({\n      ...prev,\n      [studentId]: status\n    }));\n  };\n\n  // 출결 저장 함수\n  const saveAttendance = async () => {\n    try {\n      // 실제 API 호출 로직이 들어갈 곳\n      // await saveAttendanceAPI(params.id, attendanceRecords);\n      \n      // 임시로 저장 처리 시뮬레이션\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      \n      // 성공 알림 표시\n      showNotification('출결이 성공적으로 저장되었습니다! ✅', 'success');\n    } catch (error) {\n      // 실패 알림 표시\n      showNotification('출결 저장 중 오류가 발생했습니다. 다시 시도해주세요.', 'error');\n    }\n  };\n\n  // 알림 표시 함수\n  const showNotification = (message: string, type: 'success' | 'error') => {\n    setNotification({\n      show: true,\n      message,\n      type\n    });\n\n    // 3초 후 자동으로 알림 숨기기\n    setTimeout(() => {\n      setNotification(prev => ({ ...prev, show: false }));\n    }, 3000);\n  };\n\n  // 출결 통계 계산\n  const getAttendanceStats = () => {\n    const stats = {\n      present: 0,\n      absent: 0,\n      late: 0,\n      early_leave: 0,\n      sick_leave: 0,\n      official_leave: 0,\n    };\n\n    Object.values(attendanceRecords).forEach(status => {\n      stats[status]++;\n    });\n\n    return stats;\n  };\n\n  const stats = getAttendanceStats();\n  const presentCount = stats.present + stats.late + stats.early_leave + stats.sick_leave + stats.official_leave;\n  const attendanceRate = Math.round((presentCount / mockStudents.length) * 100);\n\n  return (\n    <MainLayout>\n      <main className=\"overflow-y-auto p-8 min-h-[calc(100vh-4rem)]\">\n        {/* 헤더 */}\n        <header className=\"mb-8\">\n          <nav className=\"text-sm text-gray-500 mb-4\">\n            <button \n              onClick={() => router.push('/')}\n              className=\"hover:text-primary-500\"\n            >\n              홈\n            </button>\n            <span className=\"mx-2\">/</span>\n            <button \n              onClick={() => router.push('/attendance')}\n              className=\"hover:text-primary-500\"\n            >\n              출결 관리\n            </button>\n            <span className=\"mx-2\">/</span>\n            <span className=\"text-gray-900\">{mockClassPeriod.subject} {mockClassPeriod.period}교시</span>\n          </nav>\n          \n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h1 className=\"text-2xl sm:text-3xl font-bold text-gray-900 mb-2\">\n                {mockClassPeriod.subject} {mockClassPeriod.period}교시 출결 관리\n              </h1>\n              <p className=\"text-gray-600 text-sm sm:text-base\">\n                {mockClassPeriod.startTime} - {mockClassPeriod.endTime} | {new Date(mockClassPeriod.date).toLocaleDateString('ko-KR')}\n              </p>\n            </div>\n            \n            <button\n              onClick={() => router.push('/attendance')}\n              className=\"flex items-center space-x-2 text-gray-600 hover:text-gray-800 transition-colors\"\n            >\n              <i className=\"fas fa-arrow-left\"></i>\n              <span>목록으로</span>\n            </button>\n          </div>\n        </header>\n\n        {/* 출결 통계 */}\n        <div className=\"bg-white rounded-xl border border-gray-200 shadow-sm p-6 mb-6\">\n          <div className=\"grid grid-cols-2 md:grid-cols-4 lg:grid-cols-7 gap-4\">\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-primary-500 mb-1\">\n                {attendanceRate}%\n              </div>\n              <div className=\"text-sm text-gray-600\">출석률</div>\n            </div>\n            \n            {Object.entries(attendanceConfig).map(([status, config]) => (\n              <div key={status} className=\"text-center\">\n                <div className=\"text-xl font-bold text-gray-900 mb-1\">\n                  {stats[status as AttendanceStatus]}\n                </div>\n                <div className=\"flex items-center justify-center space-x-1\">\n                  <div className={`w-3 h-3 rounded-full ${config.color}`}></div>\n                  <span className=\"text-sm text-gray-600\">{config.label}</span>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* 학생 목록 및 출결 체크 */}\n        <div className=\"bg-white rounded-xl border border-gray-200 shadow-sm\">\n          <div className=\"p-6 border-b border-gray-200\">\n            <h2 className=\"text-xl font-semibold text-gray-900\">학생 출결 체크</h2>\n            <p className=\"text-gray-600 text-sm mt-1\">\n              각 학생의 출결 상태를 클릭하여 변경할 수 있습니다.\n            </p>\n          </div>\n          \n          <div className=\"divide-y divide-gray-200\">\n            {mockStudents.map((student, index) => (\n              <div key={student.id} className=\"p-6 hover:bg-gray-50 transition-colors\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center space-x-4\">\n                    <div className=\"w-10 h-10 bg-gray-100 rounded-full flex items-center justify-center\">\n                      <span className=\"text-sm font-medium text-gray-600\">\n                        {index + 1}\n                      </span>\n                    </div>\n                    \n                    <div>\n                      <h3 className=\"font-medium text-gray-900\">{student.name}</h3>\n                      <p className=\"text-sm text-gray-600\">\n                        {student.studentNumber} | {student.class}\n                      </p>\n                    </div>\n                  </div>\n                  \n                  {/* 출결 상태 버튼들 */}\n                  <div className=\"flex items-center space-x-2\">\n                    {Object.entries(attendanceConfig).map(([status, config]) => (\n                      <button\n                        key={status}\n                        onClick={() => updateAttendance(student.id, status as AttendanceStatus)}\n                        className={`\n                          w-8 h-8 rounded-full transition-all duration-200 flex items-center justify-center\n                          ${attendanceRecords[student.id] === status \n                            ? `${config.color} ring-2 ring-offset-2 ring-gray-300` \n                            : `bg-gray-200 ${config.hoverColor} hover:scale-110`\n                          }\n                        `}\n                        title={config.label}\n                      >\n                        {attendanceRecords[student.id] === status && (\n                          <i className=\"fas fa-check text-white text-xs\"></i>\n                        )}\n                      </button>\n                    ))}\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* 저장 버튼 */}\n        <div className=\"mt-6 flex justify-end\">\n          <button \n            onClick={saveAttendance}\n            className=\"flex items-center space-x-2 bg-primary-500 text-white px-6 py-3 rounded-lg hover:bg-primary-600 transition-colors\"\n          >\n            <i className=\"fas fa-save\"></i>\n            <span>출결 저장</span>\n          </button>\n        </div>\n\n        {/* 토스트 알림 */}\n        {notification.show && (\n          <div className=\"fixed top-4 left-1/2 transform -translate-x-1/2 z-50 animate-slide-in-down\">\n            <div className={`\n              max-w-sm w-full bg-white rounded-lg shadow-lg border-l-4 p-4\n              ${notification.type === 'success' \n                ? 'border-green-500' \n                : 'border-red-500'\n              }\n            `}>\n              <div className=\"flex items-center\">\n                <div className={`\n                  flex-shrink-0 w-6 h-6 rounded-full flex items-center justify-center\n                  ${notification.type === 'success' \n                    ? 'bg-green-100 text-green-600' \n                    : 'bg-red-100 text-red-600'\n                  }\n                `}>\n                  <i className={`fas ${\n                    notification.type === 'success' ? 'fa-check' : 'fa-times'\n                  } text-sm`}></i>\n                </div>\n                <div className=\"ml-3 flex-1\">\n                  <p className=\"text-sm font-medium text-gray-900\">\n                    {notification.message}\n                  </p>\n                </div>\n                <button\n                  onClick={() => setNotification(prev => ({ ...prev, show: false }))}\n                  className=\"ml-4 flex-shrink-0 text-gray-400 hover:text-gray-600 transition-colors\"\n                >\n                  <i className=\"fas fa-times text-sm\"></i>\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n      </main>\n    </MainLayout>\n  );\n}\n\n"],"names":[],"mappings":"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","debugId":null}}]
}