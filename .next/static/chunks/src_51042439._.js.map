{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/sjw/ted.urssu/crayon-front/src/constants/index.ts"],"sourcesContent":["import { DocumentTemplate, MenuItem, SupportItem, Notice } from '@/types';\n\n// 메인 메뉴 항목들\nexport const MAIN_MENU_ITEMS: MenuItem[] = [\n  {\n    id: 'document-generation',\n    title: '문서 생성',\n    description: 'AI 기반 행정 문서 자동 생성',\n    icon: 'fas fa-file-alt',\n    href: '/documents',\n    isActive: true,\n  },\n  {\n    id: 'evaluation-grading',\n    title: '수행평가 채점',\n    description: 'AI 자동 채점 시스템',\n    icon: 'fas fa-clipboard-check',\n    href: '/evaluation',\n  },\n  {\n    id: 'attendance-management',\n    title: '출결 관리',\n    description: '출석부 관리 및 통계',\n    icon: 'fas fa-calendar-check',\n    href: '/attendance',\n  },\n];\n\n// 문서 템플릿들\nexport const DOCUMENT_TEMPLATES: DocumentTemplate[] = [\n  {\n    id: 'home-communication',\n    title: '가정통신문',\n    description: '학부모 대상 안내 문서',\n    category: 'communication',\n    templateCount: 5,\n    features: ['템플릿 제공', '자동 완성', '일괄 발송'],\n  },\n  {\n    id: 'creative-activity-plan',\n    title: '창의적 체험활동 계획서',\n    description: '체험활동 계획 및 운영 문서',\n    category: 'activity',\n    features: ['자동 완성 기능', '교육과정 연계', 'AI 추천'],\n  },\n  {\n    id: 'evaluation-rubric',\n    title: '수행평가 기준표',\n    description: '과목별 평가 기준 문서',\n    category: 'evaluation',\n    features: ['과목별 양식', '자동 배점', '루브릭 생성'],\n  },\n  {\n    id: 'class-meeting-minutes',\n    title: '학급회의록',\n    description: '학급 회의 기록 문서',\n    category: 'meeting',\n    features: ['음성인식 받아쓰기', '자동 요약', '참석자 관리'],\n  },\n  {\n    id: 'field-trip-plan',\n    title: '현장체험학습 계획서',\n    description: '체험학습 계획 및 안전 관리',\n    category: 'activity',\n    features: ['안전 계획 자동 생성', '보험 연계', '승인 절차'],\n  },\n  {\n    id: 'parent-consultation',\n    title: '학부모 상담 기록부',\n    description: '상담 내용 기록 및 관리',\n    category: 'communication',\n    features: ['상담 이력 관리', '자동 분류', '후속 조치 알림'],\n  },\n];\n\n// 공지사항\nexport const NOTICES: Notice[] = [\n  {\n    id: '1',\n    title: '8월 시스템 정기점검 안내',\n    content: '8월 25일 오전 2시부터 4시까지 시스템 정기점검이 진행됩니다.',\n    date: '2024-08-15',\n    isImportant: true,\n  },\n  {\n    id: '2',\n    title: '수행평가 채점 AI 모델 업데이트 안내',\n    content: '더욱 정확한 채점을 위한 AI 모델이 업데이트되었습니다.',\n    date: '2024-08-14',\n  },\n  {\n    id: '3',\n    title: '새로운 문서 템플릿 추가',\n    content: '현장체험학습 계획서와 학부모 상담 기록부 템플릿이 추가되었습니다.',\n    date: '2024-08-13',\n  },\n];\n\n// 지원 메뉴\nexport const SUPPORT_ITEMS: SupportItem[] = [\n  {\n    id: 'manual',\n    title: '사용 메뉴얼',\n    href: '/manual',\n    icon: 'fas fa-book',\n  },\n  {\n    id: 'faq',\n    title: '자주 묻는 질문 (FAQ)',\n    href: '/faq',\n    icon: 'fas fa-question-circle',\n  },\n  {\n    id: 'support',\n    title: '1:1 고객 지원',\n    href: '/support',\n    icon: 'fas fa-headset',\n  },\n];\n\n// 네비게이션 메뉴\nexport const NAVIGATION_ITEMS = [\n  { title: '학생관리', href: '/students' },\n  { title: '출결도우미', href: '/attendance' },\n  { title: '채점도우미', href: '/evaluation' },\n  { title: '생기부도우미', href: '/records' },\n];\n\n// 색상 상수\nexport const COLORS = {\n  primary: '#1ccf60',\n  primaryLight: '#22d065',\n  primaryDark: '#16a34a',\n  background: '#ffffff',\n  backgroundLight: '#f9fafb',\n  text: '#333333',\n  textLight: '#6b7280',\n  border: '#e5e7eb',\n  borderLight: '#f0f0f0',\n} as const;\n\n// 브레이크포인트\nexport const BREAKPOINTS = {\n  sm: '640px',\n  md: '768px',\n  lg: '1024px',\n  xl: '1280px',\n  '2xl': '1536px',\n} as const;\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAGO,MAAM,kBAA8B;IACzC;QACE,IAAI;QACJ,OAAO;QACP,aAAa;QACb,MAAM;QACN,MAAM;QACN,UAAU;IACZ;IACA;QACE,IAAI;QACJ,OAAO;QACP,aAAa;QACb,MAAM;QACN,MAAM;IACR;IACA;QACE,IAAI;QACJ,OAAO;QACP,aAAa;QACb,MAAM;QACN,MAAM;IACR;CACD;AAGM,MAAM,qBAAyC;IACpD;QACE,IAAI;QACJ,OAAO;QACP,aAAa;QACb,UAAU;QACV,eAAe;QACf,UAAU;YAAC;YAAU;YAAS;SAAQ;IACxC;IACA;QACE,IAAI;QACJ,OAAO;QACP,aAAa;QACb,UAAU;QACV,UAAU;YAAC;YAAY;YAAW;SAAQ;IAC5C;IACA;QACE,IAAI;QACJ,OAAO;QACP,aAAa;QACb,UAAU;QACV,UAAU;YAAC;YAAU;YAAS;SAAS;IACzC;IACA;QACE,IAAI;QACJ,OAAO;QACP,aAAa;QACb,UAAU;QACV,UAAU;YAAC;YAAa;YAAS;SAAS;IAC5C;IACA;QACE,IAAI;QACJ,OAAO;QACP,aAAa;QACb,UAAU;QACV,UAAU;YAAC;YAAe;YAAS;SAAQ;IAC7C;IACA;QACE,IAAI;QACJ,OAAO;QACP,aAAa;QACb,UAAU;QACV,UAAU;YAAC;YAAY;YAAS;SAAW;IAC7C;CACD;AAGM,MAAM,UAAoB;IAC/B;QACE,IAAI;QACJ,OAAO;QACP,SAAS;QACT,MAAM;QACN,aAAa;IACf;IACA;QACE,IAAI;QACJ,OAAO;QACP,SAAS;QACT,MAAM;IACR;IACA;QACE,IAAI;QACJ,OAAO;QACP,SAAS;QACT,MAAM;IACR;CACD;AAGM,MAAM,gBAA+B;IAC1C;QACE,IAAI;QACJ,OAAO;QACP,MAAM;QACN,MAAM;IACR;IACA;QACE,IAAI;QACJ,OAAO;QACP,MAAM;QACN,MAAM;IACR;IACA;QACE,IAAI;QACJ,OAAO;QACP,MAAM;QACN,MAAM;IACR;CACD;AAGM,MAAM,mBAAmB;IAC9B;QAAE,OAAO;QAAQ,MAAM;IAAY;IACnC;QAAE,OAAO;QAAS,MAAM;IAAc;IACtC;QAAE,OAAO;QAAS,MAAM;IAAc;IACtC;QAAE,OAAO;QAAU,MAAM;IAAW;CACrC;AAGM,MAAM,SAAS;IACpB,SAAS;IACT,cAAc;IACd,aAAa;IACb,YAAY;IACZ,iBAAiB;IACjB,MAAM;IACN,WAAW;IACX,QAAQ;IACR,aAAa;AACf;AAGO,MAAM,cAAc;IACzB,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,OAAO;AACT","debugId":null}},
    {"offset": {"line": 197, "column": 0}, "map": {"version":3,"sources":["file:///Users/sjw/ted.urssu/crayon-front/src/components/layout/MobileMenu.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport Link from 'next/link';\nimport { usePathname } from 'next/navigation';\nimport { NAVIGATION_ITEMS } from '@/constants';\n\ninterface MobileMenuProps {\n  isOpen: boolean;\n  onClose: () => void;\n}\n\n/**\n * 모바일 메뉴 컴포넌트\n * \n * 모바일 환경에서 사용되는 슬라이드 메뉴입니다.\n * \n * 주요 기능:\n * - 슬라이드 애니메이션\n * - 오버레이 백드롭\n * - 터치 제스처 지원\n * - 접근성 고려\n * \n * @param isOpen - 메뉴 열림 상태\n * @param onClose - 메뉴 닫기 콜백\n */\nconst MobileMenu: React.FC<MobileMenuProps> = ({ isOpen, onClose }) => {\n  const pathname = usePathname();\n\n  // ESC 키로 메뉴 닫기\n  useEffect(() => {\n    const handleEscape = (e: KeyboardEvent) => {\n      if (e.key === 'Escape' && isOpen) {\n        onClose();\n      }\n    };\n\n    document.addEventListener('keydown', handleEscape);\n    return () => document.removeEventListener('keydown', handleEscape);\n  }, [isOpen, onClose]);\n\n  // 바디 스크롤 방지\n  useEffect(() => {\n    if (isOpen) {\n      document.body.style.overflow = 'hidden';\n    } else {\n      document.body.style.overflow = 'unset';\n    }\n\n    return () => {\n      document.body.style.overflow = 'unset';\n    };\n  }, [isOpen]);\n\n  if (!isOpen) return null;\n\n  return (\n    <>\n      {/* 백드롭 오버레이 */}\n      <div\n        className=\"fixed inset-0 bg-black bg-opacity-50 z-40 md:hidden\"\n        onClick={onClose}\n        aria-hidden=\"true\"\n      />\n\n      {/* 슬라이드 메뉴 */}\n      <div\n        className={`fixed top-0 left-0 h-full w-80 bg-white shadow-xl z-50 transform transition-transform duration-300 ease-in-out md:hidden ${\n          isOpen ? 'translate-x-0' : '-translate-x-full'\n        }`}\n      >\n        {/* 헤더 */}\n        <div className=\"flex items-center justify-between p-6 border-b border-gray-200\">\n          <div className=\"flex items-center\">\n            <div className=\"w-8 h-8 bg-primary-500 rounded-lg flex items-center justify-center mr-3\">\n              <svg\n                className=\"w-5 h-5 text-white\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\"\n                />\n              </svg>\n            </div>\n            <h2 className=\"text-lg font-bold text-gray-900\">AI 행정 도우미</h2>\n          </div>\n          <button\n            onClick={onClose}\n            className=\"p-2 text-gray-400 hover:text-gray-600 transition-colors\"\n            aria-label=\"메뉴 닫기\"\n          >\n            <svg\n              className=\"w-6 h-6\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M6 18L18 6M6 6l12 12\"\n              />\n            </svg>\n          </button>\n        </div>\n\n        {/* 네비게이션 메뉴 */}\n        <nav className=\"py-6\">\n          <div className=\"px-6 mb-4\">\n            <h3 className=\"text-xs font-semibold text-gray-400 uppercase tracking-wider\">\n              메인 메뉴\n            </h3>\n          </div>\n          <div className=\"space-y-1\">\n            {NAVIGATION_ITEMS.map((item) => {\n              const isActive = pathname === item.href;\n              return (\n                <Link\n                  key={item.href}\n                  href={item.href}\n                  onClick={onClose}\n                  className={`flex items-center px-6 py-3 text-sm font-medium transition-colors ${\n                    isActive\n                      ? 'text-primary-600 bg-primary-50 border-r-4 border-primary-600'\n                      : 'text-gray-600 hover:text-gray-900 hover:bg-gray-50'\n                  }`}\n                >\n                  {item.title}\n                </Link>\n              );\n            })}\n          </div>\n        </nav>\n\n        {/* 사용자 정보 */}\n        <div className=\"absolute bottom-0 left-0 right-0 p-6 border-t border-gray-200\">\n          <div className=\"flex items-center\">\n            <img\n              className=\"h-10 w-10 rounded-full object-cover border-2 border-gray-200\"\n              src=\"https://placehold.co/100x100/1ccf60/ffffff?text=교\"\n              alt=\"사용자 프로필\"\n            />\n            <div className=\"ml-3\">\n              <p className=\"text-sm font-semibold text-gray-900\">김민준 선생님</p>\n              <p className=\"text-xs text-gray-500\">서울초등학교</p>\n            </div>\n          </div>\n          <div className=\"mt-4 grid grid-cols-2 gap-3\">\n            <button className=\"flex items-center justify-center px-3 py-2 text-xs font-medium text-gray-600 bg-gray-100 rounded-lg hover:bg-gray-200 transition-colors\">\n              <svg className=\"w-4 h-4 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\" />\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\n              </svg>\n              설정\n            </button>\n            <button className=\"flex items-center justify-center px-3 py-2 text-xs font-medium text-gray-600 bg-gray-100 rounded-lg hover:bg-gray-200 transition-colors\">\n              <svg className=\"w-4 h-4 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\" />\n              </svg>\n              로그아웃\n            </button>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default MobileMenu;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 565, "column": 0}, "map": {"version":3,"sources":["file:///Users/sjw/ted.urssu/crayon-front/src/components/layout/Header.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState } from 'react';\nimport Link from 'next/link';\nimport { usePathname } from 'next/navigation';\nimport { NAVIGATION_ITEMS } from '@/constants';\nimport { User } from '@/types';\nimport MobileMenu from './MobileMenu';\n\ninterface HeaderProps {\n  user?: User;\n}\n\n/**\n * 상단 네비게이션 바 컴포넌트\n * \n * 기능:\n * - 로고 및 서비스명 표시\n * - 메인 네비게이션 메뉴\n * - 사용자 정보 및 알림\n * - 반응형 디자인 지원\n * \n * @param user - 현재 로그인한 사용자 정보\n */\nconst Header: React.FC<HeaderProps> = ({ user }) => {\n  const pathname = usePathname();\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n\n  // 기본 사용자 정보 (개발용)\n  const defaultUser: User = {\n    id: '1',\n    name: '김민준',\n    email: 'teacher@school.edu',\n    role: 'teacher',\n    school: '서울초등학교',\n    avatar: 'https://placehold.co/100x100/1ccf60/ffffff?text=교',\n  };\n\n  const currentUser = user || defaultUser;\n\n  const toggleMobileMenu = () => {\n    setIsMobileMenuOpen(!isMobileMenuOpen);\n  };\n\n  return (\n    <header className=\"bg-white/95 backdrop-blur-sm border-b border-gray-200 w-full flex-shrink-0 fixed top-0 left-0 right-0 z-50 shadow-sm\">\n      <div className=\"mx-auto px-6\">\n        <div className=\"flex justify-between items-center h-16\">\n          {/* 로고 및 메뉴 */}\n          <div className=\"flex items-center space-x-8\">\n            {/* 로고 */}\n            <Link href=\"/\" className=\"flex items-center hover:opacity-80 transition-opacity cursor-pointer\">\n              <img \n                src=\"/images/pencil-logo.png\" \n                alt=\"로고\" \n                className=\"w-8 h-8 rounded-full mr-2 shadow-sm\"\n              />\n              <h1 className=\"text-lg font-bold\">크레파스 - AI도우미</h1>\n            </Link>\n            {/* 네비게이션 메뉴 */}\n            <nav className=\"hidden md:flex items-center space-x-6\">\n              {NAVIGATION_ITEMS.map((item) => {\n                const isActive = pathname === item.href;\n                return (\n                  <Link\n                    key={item.href}\n                    href={item.href}\n                    className={`text-sm font-semibold ${\n                      isActive\n                        ? 'text-primary-500 border-b-2 border-primary-500 pb-1'\n                        : 'text-gray-600 hover:text-primary-500'\n                    }`}\n                  >\n                    {item.title}\n                  </Link>\n                );\n              })}\n            </nav>\n          </div>\n          {/* 사용자 정보 및 알림 */}\n          <div className=\"flex items-center space-x-4\">\n            <button className=\"text-gray-500 hover:text-gray-800\">\n              <i className=\"fas fa-bell\"></i>\n            </button>\n            <div className=\"flex items-center\">\n              <img\n                className=\"h-9 w-9 rounded-full object-cover\"\n                src=\"/images/cute-character.svg\"\n                alt=\"User avatar\"\n              />\n              <div className=\"ml-2 hidden md:block\">\n                <p className=\"text-sm font-semibold\">{currentUser.name} 선생님</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* 모바일 메뉴 */}\n      <MobileMenu \n        isOpen={isMobileMenuOpen} \n        onClose={() => setIsMobileMenuOpen(false)} \n      />\n    </header>\n  );\n};\n\nexport default Header;\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA;AAEA;;;AAPA;;;;;;AAaA;;;;;;;;;;CAUC,GACD,MAAM,SAAgC;QAAC,EAAE,IAAI,EAAE;;IAC7C,MAAM,WAAW,IAAA,oJAAW;IAC5B,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,IAAA,yKAAQ,EAAC;IAEzD,kBAAkB;IAClB,MAAM,cAAoB;QACxB,IAAI;QACJ,MAAM;QACN,OAAO;QACP,MAAM;QACN,QAAQ;QACR,QAAQ;IACV;IAEA,MAAM,cAAc,QAAQ;IAE5B,MAAM,mBAAmB;QACvB,oBAAoB,CAAC;IACvB;IAEA,qBACE,6LAAC;QAAO,WAAU;;0BAChB,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAI,WAAU;;sCAEb,6LAAC;4BAAI,WAAU;;8CAEb,6LAAC,0KAAI;oCAAC,MAAK;oCAAI,WAAU;;sDACvB,6LAAC;4CACC,KAAI;4CACJ,KAAI;4CACJ,WAAU;;;;;;sDAEZ,6LAAC;4CAAG,WAAU;sDAAoB;;;;;;;;;;;;8CAGpC,6LAAC;oCAAI,WAAU;8CACZ,gJAAgB,CAAC,GAAG,CAAC,CAAC;wCACrB,MAAM,WAAW,aAAa,KAAK,IAAI;wCACvC,qBACE,6LAAC,0KAAI;4CAEH,MAAM,KAAK,IAAI;4CACf,WAAW,AAAC,yBAIX,OAHC,WACI,wDACA;sDAGL,KAAK,KAAK;2CARN,KAAK,IAAI;;;;;oCAWpB;;;;;;;;;;;;sCAIJ,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAO,WAAU;8CAChB,cAAA,6LAAC;wCAAE,WAAU;;;;;;;;;;;8CAEf,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CACC,WAAU;4CACV,KAAI;4CACJ,KAAI;;;;;;sDAEN,6LAAC;4CAAI,WAAU;sDACb,cAAA,6LAAC;gDAAE,WAAU;;oDAAyB,YAAY,IAAI;oDAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAQjE,6LAAC,wJAAU;gBACT,QAAQ;gBACR,SAAS,IAAM,oBAAoB;;;;;;;;;;;;AAI3C;GAjFM;;QACa,oJAAW;;;KADxB;uCAmFS","debugId":null}},
    {"offset": {"line": 775, "column": 0}, "map": {"version":3,"sources":["file:///Users/sjw/ted.urssu/crayon-front/src/components/layout/Sidebar.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport Link from 'next/link';\nimport { Notice, SupportItem } from '@/types';\n// import { NOTICES, SUPPORT_ITEMS } from '@/constants';\n\n/**\n * 우측 사이드바 컴포넌트\n * \n * 기능:\n * - 공지사항 표시\n * - 도움말 및 지원 메뉴\n * - 반응형 디자인 (모바일에서는 숨김)\n * \n * 이 컴포넌트는 Clean Architecture의 UI Layer에 속하며,\n * 비즈니스 로직과 분리된 순수한 프레젠테이션 컴포넌트입니다.\n */\nconst Sidebar: React.FC = () => {\n  /**\n   * 날짜를 한국어 형식으로 포맷팅\n   * @param dateString - ISO 날짜 문자열\n   * @returns 포맷된 날짜 문자열\n   */\n  const formatDate = (dateString: string): string => {\n    const date = new Date(dateString);\n    return new Intl.DateTimeFormat('ko-KR', {\n      month: 'long',\n      day: 'numeric',\n    }).format(date);\n  };\n\n  /**\n   * 공지사항 아이템 렌더링\n   */\n  const renderNoticeItem = (notice: Notice) => (\n    <li key={notice.id} className=\"group\">\n      <Link\n        href={`/notices/${notice.id}`}\n        className=\"block p-3 rounded-lg hover:bg-gray-50 transition-colors\"\n      >\n        <div className=\"flex items-start justify-between\">\n          <div className=\"flex-1 min-w-0\">\n            <p className={`text-sm font-medium truncate ${\n              notice.isImportant ? 'text-red-600' : 'text-gray-900'\n            }`}>\n              {notice.isImportant && (\n                <span className=\"inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-red-100 text-red-800 mr-2\">\n                  중요\n                </span>\n              )}\n              {notice.title}\n            </p>\n            <p className=\"text-xs text-gray-500 mt-1 line-clamp-2\">\n              {notice.content}\n            </p>\n            <p className=\"text-xs text-gray-400 mt-1\">\n              {formatDate(notice.date)}\n            </p>\n          </div>\n          <svg\n            className=\"w-4 h-4 text-gray-400 group-hover:text-green-500 transition-colors ml-2\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            viewBox=\"0 0 24 24\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M9 5l7 7-7 7\"\n            />\n          </svg>\n        </div>\n      </Link>\n    </li>\n  );\n\n  /**\n   * 지원 메뉴 아이템 렌더링\n   */\n  const renderSupportItem = (item: SupportItem) => (\n    <li key={item.id}>\n      <Link\n        href={item.href}\n        className=\"flex items-center p-3 text-sm text-gray-600 hover:text-green-500 hover:bg-gray-50 rounded-lg transition-all group\"\n      >\n        <svg\n          className=\"w-4 h-4 mr-3 group-hover:text-green-500 transition-colors\"\n          fill=\"currentColor\"\n          viewBox=\"0 0 20 20\"\n        >\n          {/* 아이콘은 실제 구현에서 각 타입에 맞게 교체 */}\n          <path\n            fillRule=\"evenodd\"\n            d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-8-3a1 1 0 00-.867.5 1 1 0 11-1.731-1A3 3 0 0113 8a3.001 3.001 0 01-2 2.83V11a1 1 0 11-2 0v-1a1 1 0 011-1 1 1 0 100-2zm0 8a1 1 0 100-2 1 1 0 000 2z\"\n            clipRule=\"evenodd\"\n          />\n        </svg>\n        <span className=\"truncate\">{item.title}</span>\n        <svg\n          className=\"w-3 h-3 ml-auto text-gray-400 group-hover:text-green-500 transition-colors\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          viewBox=\"0 0 24 24\"\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth={2}\n            d=\"M9 5l7 7-7 7\"\n          />\n        </svg>\n      </Link>\n    </li>\n  );\n\n  return (\n    <aside className=\"w-80 flex-shrink-0 bg-white border-l border-gray-200 p-6 overflow-y-auto hidden lg:block h-[calc(100vh-4rem)] max-h-[calc(100vh-4rem)]\">\n      <div className=\"widget-box rounded-xl mb-6\">\n        <h3 className=\"font-semibold p-4 border-b border-gray-200\">\n          공지사항\n        </h3>\n        <ul className=\"p-4 space-y-3 text-sm text-gray-600\">\n          <li className=\"hover:text-primary-500 cursor-pointer\">- 8월 시스템 정기점검 안내 (25일 02:00)</li>\n          <li className=\"hover:text-primary-500 cursor-pointer\">- 수행평가 채점 AI 모델 업데이트 안내</li>\n        </ul>\n      </div>\n      <div className=\"widget-box rounded-xl\">\n        <h3 className=\"font-semibold p-4 border-b border-gray-200\">\n          도움말 및 지원\n        </h3>\n        <ul className=\"p-4 space-y-3 text-sm text-gray-600\">\n          <li className=\"hover:text-primary-500 cursor-pointer\">사용 메뉴얼</li>\n          <li className=\"hover:text-primary-500 cursor-pointer\">자주 묻는 질문 (FAQ)</li>\n          <li className=\"hover:text-primary-500 cursor-pointer\">1:1 고객 지원</li>\n        </ul>\n      </div>\n    </aside>\n  );\n};\n\nexport default Sidebar;\n"],"names":[],"mappings":";;;;;AAGA;AAHA;;;AAKA,wDAAwD;AAExD;;;;;;;;;;CAUC,GACD,MAAM,UAAoB;IACxB;;;;GAIC,GACD,MAAM,aAAa,CAAC;QAClB,MAAM,OAAO,IAAI,KAAK;QACtB,OAAO,IAAI,KAAK,cAAc,CAAC,SAAS;YACtC,OAAO;YACP,KAAK;QACP,GAAG,MAAM,CAAC;IACZ;IAEA;;GAEC,GACD,MAAM,mBAAmB,CAAC,uBACxB,6LAAC;YAAmB,WAAU;sBAC5B,cAAA,6LAAC,0KAAI;gBACH,MAAM,AAAC,YAAqB,OAAV,OAAO,EAAE;gBAC3B,WAAU;0BAEV,cAAA,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAE,WAAW,AAAC,gCAEd,OADC,OAAO,WAAW,GAAG,iBAAiB;;wCAErC,OAAO,WAAW,kBACjB,6LAAC;4CAAK,WAAU;sDAAgG;;;;;;wCAIjH,OAAO,KAAK;;;;;;;8CAEf,6LAAC;oCAAE,WAAU;8CACV,OAAO,OAAO;;;;;;8CAEjB,6LAAC;oCAAE,WAAU;8CACV,WAAW,OAAO,IAAI;;;;;;;;;;;;sCAG3B,6LAAC;4BACC,WAAU;4BACV,MAAK;4BACL,QAAO;4BACP,SAAQ;sCAER,cAAA,6LAAC;gCACC,eAAc;gCACd,gBAAe;gCACf,aAAa;gCACb,GAAE;;;;;;;;;;;;;;;;;;;;;;WAlCH,OAAO,EAAE;;;;;IA0CpB;;GAEC,GACD,MAAM,oBAAoB,CAAC,qBACzB,6LAAC;sBACC,cAAA,6LAAC,0KAAI;gBACH,MAAM,KAAK,IAAI;gBACf,WAAU;;kCAEV,6LAAC;wBACC,WAAU;wBACV,MAAK;wBACL,SAAQ;kCAGR,cAAA,6LAAC;4BACC,UAAS;4BACT,GAAE;4BACF,UAAS;;;;;;;;;;;kCAGb,6LAAC;wBAAK,WAAU;kCAAY,KAAK,KAAK;;;;;;kCACtC,6LAAC;wBACC,WAAU;wBACV,MAAK;wBACL,QAAO;wBACP,SAAQ;kCAER,cAAA,6LAAC;4BACC,eAAc;4BACd,gBAAe;4BACf,aAAa;4BACb,GAAE;;;;;;;;;;;;;;;;;WA5BD,KAAK,EAAE;;;;;IAmClB,qBACE,6LAAC;QAAM,WAAU;;0BACf,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAG,WAAU;kCAA6C;;;;;;kCAG3D,6LAAC;wBAAG,WAAU;;0CACZ,6LAAC;gCAAG,WAAU;0CAAwC;;;;;;0CACtD,6LAAC;gCAAG,WAAU;0CAAwC;;;;;;;;;;;;;;;;;;0BAG1D,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAG,WAAU;kCAA6C;;;;;;kCAG3D,6LAAC;wBAAG,WAAU;;0CACZ,6LAAC;gCAAG,WAAU;0CAAwC;;;;;;0CACtD,6LAAC;gCAAG,WAAU;0CAAwC;;;;;;0CACtD,6LAAC;gCAAG,WAAU;0CAAwC;;;;;;;;;;;;;;;;;;;;;;;;AAKhE;KA1HM;uCA4HS","debugId":null}},
    {"offset": {"line": 1073, "column": 0}, "map": {"version":3,"sources":["file:///Users/sjw/ted.urssu/crayon-front/src/components/layout/MainLayout.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport Header from './Header';\nimport Sidebar from './Sidebar';\nimport { User } from '@/types';\n\ninterface MainLayoutProps {\n  children: React.ReactNode;\n  user?: User;\n  showSidebar?: boolean;\n}\n\n/**\n * 메인 레이아웃 컴포넌트\n * \n * 전체 애플리케이션의 레이아웃을 담당하는 컴포넌트입니다.\n * Clean Architecture의 Framework & Drivers Layer에 해당하며,\n * 사용자 인터페이스의 전체적인 구조를 정의합니다.\n * \n * 변경 이유: 기존 HTML 구조를 React 컴포넌트로 변환하여\n * 재사용성과 유지보수성을 향상시켰습니다.\n * \n * @param children - 메인 콘텐츠 영역에 렌더링될 컴포넌트\n * @param user - 현재 로그인한 사용자 정보\n * @param showSidebar - 사이드바 표시 여부 (기본값: true)\n */\nconst MainLayout: React.FC<MainLayoutProps> = ({ \n  children, \n  user, \n  showSidebar = true \n}) => {\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* 상단 헤더 - 고정 위치 */}\n      <Header user={user} />\n\n      {/* 메인 콘텐츠 영역 - 헤더 높이만큼 상단 여백 추가 */}\n      <div className=\"flex min-h-[calc(100vh-4rem)] pt-16\">\n        {/* 메인 콘텐츠 - 남은 공간 모두 사용 */}\n        <div className=\"flex-1\">\n          {children}\n        </div>\n\n        {/* 우측 사이드바 - 조건부 렌더링 */}\n        {showSidebar && <Sidebar />}\n      </div>\n    </div>\n  );\n};\n\nexport default MainLayout;\n"],"names":[],"mappings":";;;;;AAGA;AACA;AAJA;;;;AAaA;;;;;;;;;;;;;CAaC,GACD,MAAM,aAAwC;QAAC,EAC7C,QAAQ,EACR,IAAI,EACJ,cAAc,IAAI,EACnB;IACC,qBACE,6LAAC;QAAI,WAAU;;0BAEb,6LAAC,oJAAM;gBAAC,MAAM;;;;;;0BAGd,6LAAC;gBAAI,WAAU;;kCAEb,6LAAC;wBAAI,WAAU;kCACZ;;;;;;oBAIF,6BAAe,6LAAC,qJAAO;;;;;;;;;;;;;;;;;AAIhC;KAtBM;uCAwBS","debugId":null}},
    {"offset": {"line": 1149, "column": 0}, "map": {"version":3,"sources":["file:///Users/sjw/ted.urssu/crayon-front/src/app/students/page.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState } from 'react';\nimport MainLayout from '@/components/layout/MainLayout';\nimport { Student } from '@/types';\n\n/**\n * 학생관리 페이지\n * \n * 학생 정보 관리 및 검색 기능 제공\n * - 학생 목록 조회 (카드형/리스트형)\n * - 검색 및 필터링\n * - 즐겨찾기 관리\n * - 학생 등록\n */\nexport default function StudentsPage() {\n  // 뷰 모드 (카드형/리스트형)\n  const [viewMode, setViewMode] = useState<'card' | 'list'>('card');\n  const [searchQuery, setSearchQuery] = useState('');\n  const [selectedGrade, setSelectedGrade] = useState<string>('전체');\n  const [selectedClass, setSelectedClass] = useState<string>('전체');\n  const [selectedTag, setSelectedTag] = useState<string>('전체');\n  const [showAddModal, setShowAddModal] = useState(false);\n\n  // 임시 학생 데이터\n  const [students, setStudents] = useState<Student[]>([\n    {\n      id: '1',\n      name: '홍길동',\n      studentNumber: '202401001',\n      class: '1-2',\n      grade: 1,\n      tags: ['도움필요', '수학우수'],\n      isFavorite: true,\n      avatar: '/images/cute-character.svg'\n    },\n    {\n      id: '2',\n      name: '김철수',\n      studentNumber: '202402001',\n      class: '2-1',\n      grade: 2,\n      tags: ['우수', '리더십'],\n      isFavorite: false,\n      avatar: '/images/cute-character.svg'\n    },\n    {\n      id: '3',\n      name: '이영희',\n      studentNumber: '202401002',\n      class: '1-2',\n      grade: 1,\n      tags: ['성실', '예술'],\n      isFavorite: true,\n      avatar: '/images/cute-character.svg'\n    },\n    {\n      id: '4',\n      name: '박민수',\n      studentNumber: '202403001',\n      class: '3-1',\n      grade: 3,\n      tags: ['체육우수'],\n      isFavorite: false,\n      avatar: '/images/cute-character.svg'\n    }\n  ]);\n\n  // 즐겨찾기 토글\n  const toggleFavorite = (studentId: string) => {\n    setStudents(students.map(student => \n      student.id === studentId \n        ? { ...student, isFavorite: !student.isFavorite }\n        : student\n    ));\n  };\n\n  // 필터링된 학생 목록\n  const filteredStudents = students.filter(student => {\n    const matchesSearch = student.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\n                         student.studentNumber.includes(searchQuery) ||\n                         student.class.includes(searchQuery);\n    const matchesGrade = selectedGrade === '전체' || student.grade === parseInt(selectedGrade);\n    const matchesClass = selectedClass === '전체' || student.class.includes(selectedClass);\n    const matchesTag = selectedTag === '전체' || student.tags.includes(selectedTag);\n    \n    return matchesSearch && matchesGrade && matchesClass && matchesTag;\n  });\n\n  // 태그 색상 매핑\n  const getTagColor = (tag: string) => {\n    const colors: Record<string, string> = {\n      '도움필요': 'bg-red-100 text-red-800',\n      '우수': 'bg-blue-100 text-blue-800',\n      '성실': 'bg-green-100 text-green-800',\n      '리더십': 'bg-purple-100 text-purple-800',\n      '예술': 'bg-pink-100 text-pink-800',\n      '체육우수': 'bg-orange-100 text-orange-800',\n      '수학우수': 'bg-yellow-100 text-yellow-800',\n    };\n    return colors[tag] || 'bg-gray-100 text-gray-800';\n  };\n\n  return (\n    <MainLayout>\n      <main className=\"overflow-y-auto p-8 min-h-[calc(100vh-4rem)]\">\n        {/* 페이지 헤더 */}\n        <header className=\"mb-8\">\n          <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">학생관리</h1>\n          <p className=\"text-gray-600\">우리 반 학생들을 체계적으로 관리하세요.</p>\n        </header>\n\n        {/* 검색 및 필터 영역 */}\n        <div className=\"bg-white rounded-xl border border-gray-200 shadow-sm p-6 mb-6\">\n          <div className=\"flex flex-col lg:flex-row gap-4\">\n            {/* 검색창 */}\n            <div className=\"flex-1 relative\">\n              <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                <svg className=\"w-5 h-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n                </svg>\n              </div>\n              <input\n                type=\"text\"\n                placeholder=\"학생 이름, 학번, 반으로 검색...\"\n                value={searchQuery}\n                onChange={(e) => setSearchQuery(e.target.value)}\n                className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:border-primary-500\"\n              />\n            </div>\n\n            {/* 필터 */}\n            <div className=\"flex gap-3\">\n              <select \n                value={selectedGrade} \n                onChange={(e) => setSelectedGrade(e.target.value)}\n                className=\"px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:border-primary-500\"\n              >\n                <option value=\"전체\">전체 학년</option>\n                <option value=\"1\">1학년</option>\n                <option value=\"2\">2학년</option>\n                <option value=\"3\">3학년</option>\n              </select>\n\n              <select \n                value={selectedClass} \n                onChange={(e) => setSelectedClass(e.target.value)}\n                className=\"px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:border-primary-500\"\n              >\n                <option value=\"전체\">전체 반</option>\n                <option value=\"1\">1반</option>\n                <option value=\"2\">2반</option>\n                <option value=\"3\">3반</option>\n              </select>\n\n              <select \n                value={selectedTag} \n                onChange={(e) => setSelectedTag(e.target.value)}\n                className=\"px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:border-primary-500\"\n              >\n                <option value=\"전체\">전체 태그</option>\n                <option value=\"도움필요\">도움필요</option>\n                <option value=\"우수\">우수</option>\n                <option value=\"성실\">성실</option>\n                <option value=\"리더십\">리더십</option>\n              </select>\n            </div>\n          </div>\n        </div>\n\n        {/* 상단 액션 바 */}\n        <div className=\"flex justify-between items-center mb-6\">\n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-sm text-gray-600\">\n              총 {filteredStudents.length}명의 학생\n            </span>\n          </div>\n\n          {/* 뷰 모드 토글 */}\n          <div className=\"flex items-center space-x-2 bg-gray-100 rounded-lg p-1\">\n            <button\n              onClick={() => setViewMode('card')}\n              className={`px-3 py-1 rounded-md text-sm font-medium transition-colors ${\n                viewMode === 'card' \n                ? 'bg-white text-gray-900 shadow-sm' \n                : 'text-gray-500 hover:text-gray-900'\n              }`}\n            >\n              카드형\n            </button>\n            <button\n              onClick={() => setViewMode('list')}\n              className={`px-3 py-1 rounded-md text-sm font-medium transition-colors ${\n                viewMode === 'list' \n                ? 'bg-white text-gray-900 shadow-sm' \n                : 'text-gray-500 hover:text-gray-900'\n              }`}\n            >\n              리스트형\n            </button>\n          </div>\n        </div>\n\n        {/* 학생 목록 */}\n        {viewMode === 'card' ? (\n          /* 카드형 뷰 */\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\n            {filteredStudents.map((student) => (\n              <div key={student.id} className=\"bg-white rounded-xl border border-gray-200 shadow-sm hover:shadow-md transition-shadow p-6\">\n                <div className=\"flex items-center justify-between mb-4\">\n                  <img \n                    src={student.avatar} \n                    alt={student.name}\n                    className=\"w-12 h-12 rounded-full\"\n                  />\n                  <button\n                    onClick={() => toggleFavorite(student.id)}\n                    className={`text-xl ${student.isFavorite ? 'text-yellow-500' : 'text-gray-300'} hover:text-yellow-500 transition-colors`}\n                  >\n                    {student.isFavorite ? '⭐️' : '☆'}\n                  </button>\n                </div>\n                \n                <h3 className=\"font-semibold text-lg text-gray-900 mb-1\">{student.name}</h3>\n                <p className=\"text-sm text-gray-500 mb-3\">{student.class} · {student.studentNumber}</p>\n                \n                <div className=\"flex flex-wrap gap-1\">\n                  {student.tags.map((tag) => (\n                    <span\n                      key={tag}\n                      className={`inline-flex items-center px-2 py-1 rounded-full text-xs font-medium ${getTagColor(tag)}`}\n                    >\n                      {tag}\n                    </span>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </div>\n        ) : (\n          /* 리스트형 뷰 */\n          <div className=\"bg-white rounded-xl border border-gray-200 shadow-sm overflow-hidden\">\n            <div className=\"divide-y divide-gray-200\">\n              {filteredStudents.map((student) => (\n                <div key={student.id} className=\"p-4 hover:bg-gray-50 transition-colors\">\n                  <div className=\"flex items-center space-x-6\">\n                    {/* 학생 기본 정보 */}\n                    <div className=\"flex items-center space-x-4 min-w-0 flex-1\">\n                      <img \n                        src={student.avatar} \n                        alt={student.name}\n                        className=\"w-10 h-10 rounded-full flex-shrink-0\"\n                      />\n                      <div className=\"min-w-0\">\n                        <h3 className=\"font-medium text-gray-900\">{student.name}</h3>\n                        <p className=\"text-sm text-gray-500\">{student.studentNumber}</p>\n                      </div>\n                    </div>\n                    \n                    {/* 학년/반 */}\n                    <div className=\"w-20 flex-shrink-0\">\n                      <span className=\"text-sm text-gray-600\">{student.class}</span>\n                    </div>\n                    \n                    {/* 태그 영역 - 고정 너비와 말줄임표 */}\n                    <div className=\"w-48 flex-shrink-0\">\n                      <div className=\"flex flex-wrap gap-1 overflow-hidden\">\n                        {student.tags.slice(0, 2).map((tag) => (\n                          <span\n                            key={tag}\n                            className={`inline-flex items-center px-2 py-1 rounded-full text-xs font-medium ${getTagColor(tag)}`}\n                          >\n                            {tag}\n                          </span>\n                        ))}\n                        {student.tags.length > 2 && (\n                          <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-gray-100 text-gray-600\">\n                            +{student.tags.length - 2}\n                          </span>\n                        )}\n                      </div>\n                    </div>\n                    \n                    {/* 즐겨찾기 */}\n                    <div className=\"w-10 flex-shrink-0 flex justify-center\">\n                      <button\n                        onClick={() => toggleFavorite(student.id)}\n                        className={`text-xl ${student.isFavorite ? 'text-yellow-500' : 'text-gray-300'} hover:text-yellow-500 transition-colors`}\n                      >\n                        {student.isFavorite ? '⭐️' : '☆'}\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {/* 빈 상태 */}\n        {filteredStudents.length === 0 && (\n          <div className=\"text-center py-12\">\n            <svg className=\"w-12 h-12 text-gray-300 mx-auto mb-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z\" />\n            </svg>\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">검색 결과가 없습니다</h3>\n            <p className=\"text-gray-500\">다른 검색어나 필터를 시도해보세요.</p>\n          </div>\n        )}\n\n        {/* FAB - 학생 등록 버튼 */}\n        <button\n          onClick={() => setShowAddModal(true)}\n          className=\"fixed bottom-8 right-8 w-14 h-14 bg-primary-500 text-white rounded-full shadow-lg hover:bg-primary-600 transition-colors flex items-center justify-center z-10\"\n        >\n          <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n          </svg>\n        </button>\n\n        {/* 학생 등록 모달 (임시) */}\n        {showAddModal && (\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n            <div className=\"bg-white rounded-xl p-6 w-full max-w-md\">\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">새 학생 등록</h3>\n              <p className=\"text-gray-600 mb-4\">학생 등록 기능은 곧 구현될 예정입니다.</p>\n              <div className=\"flex justify-end space-x-3\">\n                <button\n                  onClick={() => setShowAddModal(false)}\n                  className=\"px-4 py-2 text-gray-600 hover:text-gray-800 transition-colors\"\n                >\n                  취소\n                </button>\n                <button\n                  onClick={() => setShowAddModal(false)}\n                  className=\"px-4 py-2 bg-primary-500 text-white rounded-lg hover:bg-primary-600 transition-colors\"\n                >\n                  확인\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n      </main>\n    </MainLayout>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}